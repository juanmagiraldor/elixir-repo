name: Hello CD

on:
  pull_request:
    types: [closed]
    branches:
      - master
      - develop

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['23.0']
        elixir: ['1.11.2']
    env:
      MIX_ENV: prod
      ImageOS: 'ubuntu20'

    steps:
      - name: Abort deploy if branch is invalid
        if: contains('refs/heads/master refs/heads/develop', github.ref) != true
        run: echo "Only master and develop branches can be deployed" && exit 1

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # To avoid the "shallow update not allowed" error

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{matrix.otp}}

      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: deps
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-

      - name: Install dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Setup SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}
          if_key_exists: ignore

      - name: Deploy to production if branch is master
        if: github.ref == 'refs/heads/master'
        run: |
          cp -v -f .deliver/config-prod .deliver/config;
          mix edeliver build release --branch=master
          echo 'Build finished. Starting deploy to production'
          mix edeliver deploy release to production --version=`cat VERSION`
          mix edeliver restart production

      - name: Deploy to staging if branch is develop
        if: github.ref == 'refs/heads/develop'
        run: |
          cp -v -f .deliver/config-staging .deliver/config;
          mix edeliver build release --branch=develop
          echo 'Build finished. Starting deploy to staging'
          mix edeliver deploy release to staging --version=`cat VERSION`
          mix edeliver restart staging
