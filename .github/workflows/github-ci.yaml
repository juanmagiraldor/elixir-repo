name: Hello CI

on:
  push:
    branches-ignore:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

jobs:
  run_tests:
    name: Running tests...
    runs-on: ubuntu-latest
    strategy:
      matrix:
        otp: ['23.0']
        elixir: ['1.11.2']
    env:
      MIX_ENV: test
      ImageOS: 'ubuntu20'
    services:
      postgres:
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: mps_test
        image: postgres:12
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Elixir
      uses: erlef/setup-elixir@v1
      with:
        elixir-version: ${{ matrix.elixir }}
        otp-version: ${{matrix.otp}}

    - name: Restore dependencies cache
      uses: actions/cache@v2
      id: mix-cache # to use in install dependencies
      with:
        path: deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-

    - name: Install dependencies
      if: steps.mix-cache.outputs.cache-hit != 'true'
      run: |
        mix local.rebar --force
        mix local.hex --force
        mix deps.get

    - name: Check Formatting
      run: mix format --check-formatted

    - name: Run test suite
      run: |
        mix ecto.create
        mix ecto.migrate
        mix test
